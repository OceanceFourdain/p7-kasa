{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ocean\\\\Desktop\\\\p7-kasa\\\\src\\\\Components\\\\Gallery\\\\Gallery.jsx\",\n  _s = $RefreshSig$();\n// Import des éléments React\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// Import des élément de back-end\nimport housing from \"../../data/logements.json\";\n\n// Import des élément de style\nimport \"../Css/Slide.css\";\n\n// Fonction pour faire défiler les images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Gallery() {\n  _s();\n  // Recherche dans l'URL l'iD du produit\n  const {\n    id\n  } = useParams();\n  // Rechercher de l'informations \"Pictures\" du prduit dans le fichier JSON grâce à l'ID récupérer par le Params\n  const housingPictures = housing.find(object => object.id === id);\n  const {\n    pictures\n  } = housingPictures;\n\n  // Hook useState pour définir quel images doit être affichée\n  // et quel sera la prochaine image avec la mise à jour SetCurent de \"curent\"\n  const [current, setCurrent] = useState(0);\n\n  /* Si l'image est la dernière de la liste alors retour à la prmière image*/\n  const nextSlide = () => {\n    setCurrent(current === pictures.length - 1 ? 0 : current + 1);\n  };\n\n  /* Si l'image est la première de la liste alors retour à la dernière image */\n  const prevSlide = () => {\n    setCurrent(current === 0 ? pictures.length - 1 : current - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"gallery\",\n    children: [pictures.length > 1 && /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fa-solid fa-chevron-left\",\n      onClick: prevSlide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), pictures.length > 1 && /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fa-solid fa-chevron-right\",\n      onClick: nextSlide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), pictures.map((img, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [index === current && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img,\n          alt: \"Photos du logement\",\n          className: \"gallery-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), index === current && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gallery-image-number\",\n          children: [current + 1, \"/\", pictures.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Gallery, \"8uR7Tx2x1VnEUQzuCKTiRTETOoc=\", false, function () {\n  return [useParams];\n});\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","useParams","housing","jsxDEV","_jsxDEV","Gallery","_s","id","housingPictures","find","object","pictures","current","setCurrent","nextSlide","length","prevSlide","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","img","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/ocean/Desktop/p7-kasa/src/Components/Gallery/Gallery.jsx"],"sourcesContent":["// Import des éléments React\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Import des élément de back-end\r\nimport housing from \"../../data/logements.json\";\r\n\r\n// Import des élément de style\r\nimport \"../Css/Slide.css\";\r\n\r\n// Fonction pour faire défiler les images\r\nfunction Gallery() {\r\n  // Recherche dans l'URL l'iD du produit\r\n  const { id } = useParams();\r\n  // Rechercher de l'informations \"Pictures\" du prduit dans le fichier JSON grâce à l'ID récupérer par le Params\r\n  const housingPictures = housing.find((object) => object.id === id);\r\n  const { pictures } = housingPictures;\r\n\r\n  // Hook useState pour définir quel images doit être affichée\r\n  // et quel sera la prochaine image avec la mise à jour SetCurent de \"curent\"\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  /* Si l'image est la dernière de la liste alors retour à la prmière image*/\r\n  const nextSlide = () => {\r\n    setCurrent(current === pictures.length - 1 ? 0 : current + 1);\r\n  };\r\n\r\n  /* Si l'image est la première de la liste alors retour à la dernière image */\r\n  const prevSlide = () => {\r\n    setCurrent(current === 0 ? pictures.length - 1 : current - 1);\r\n  };\r\n\r\n  return (\r\n    <section id=\"gallery\">\r\n      {/* Tant qu'il y à plus  d'une image affichage des boutons de naviagation */}\r\n      {pictures.length > 1 && (\r\n        <i className=\"fa-solid fa-chevron-left\" onClick={prevSlide}></i>\r\n      )}\r\n      {pictures.length > 1 && (\r\n        <i className=\"fa-solid fa-chevron-right\" onClick={nextSlide}></i>\r\n      )}\r\n\r\n      {/* Utilisation de la fonction map pour créer un  nouveau tableau \"pictures\" à partir du fichier JSON\r\n             avec les arguments index pour traiter l'élément en cours et \"img\" pour l'image à afficher */}\r\n      {pictures.map((img, index) => {\r\n        return (\r\n          <div key={index}>\r\n            {/* Va chercher dans l'index l'élement \"en cours\" avec sont image et sont numéro dans la pictures lenght */}\r\n            {index === current && (\r\n              <img\r\n                src={img}\r\n                alt=\"Photos du logement\"\r\n                className=\"gallery-image\"\r\n              />\r\n            )}\r\n            {index === current && (\r\n              <span className=\"gallery-image-number\">\r\n                {/* Curent +1 pour commencer l'affichage à 1 et non pas à 0 et pictures.length pour afficher les nombre total d'images */}\r\n                {current + 1}/{pictures.length}\r\n              </span>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Gallery;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;;AAE5C;AACA,OAAOC,OAAO,MAAM,2BAA2B;;AAE/C;AACA,OAAO,kBAAkB;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B;EACA,MAAMO,eAAe,GAAGN,OAAO,CAACO,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACH,EAAE,KAAKA,EAAE,CAAC;EAClE,MAAM;IAAEI;EAAS,CAAC,GAAGH,eAAe;;EAEpC;EACA;EACA,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;;EAEzC;EACA,MAAMc,SAAS,GAAGA,CAAA,KAAM;IACtBD,UAAU,CAACD,OAAO,KAAKD,QAAQ,CAACI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGH,OAAO,GAAG,CAAC,CAAC;EAC/D,CAAC;;EAED;EACA,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACtBH,UAAU,CAACD,OAAO,KAAK,CAAC,GAAGD,QAAQ,CAACI,MAAM,GAAG,CAAC,GAAGH,OAAO,GAAG,CAAC,CAAC;EAC/D,CAAC;EAED,oBACER,OAAA;IAASG,EAAE,EAAC,SAAS;IAAAU,QAAA,GAElBN,QAAQ,CAACI,MAAM,GAAG,CAAC,iBAClBX,OAAA;MAAGc,SAAS,EAAC,0BAA0B;MAACC,OAAO,EAAEH;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAChE,EACAZ,QAAQ,CAACI,MAAM,GAAG,CAAC,iBAClBX,OAAA;MAAGc,SAAS,EAAC,2BAA2B;MAACC,OAAO,EAAEL;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACjE,EAIAZ,QAAQ,CAACa,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAC5B,oBACEtB,OAAA;QAAAa,QAAA,GAEGS,KAAK,KAAKd,OAAO,iBAChBR,OAAA;UACEuB,GAAG,EAAEF,GAAI;UACTG,GAAG,EAAC,oBAAoB;UACxBV,SAAS,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CACF,EACAG,KAAK,KAAKd,OAAO,iBAChBR,OAAA;UAAMc,SAAS,EAAC,sBAAsB;UAAAD,QAAA,GAEnCL,OAAO,GAAG,CAAC,EAAC,GAAC,EAACD,QAAQ,CAACI,MAAM;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CACP;MAAA,GAdOG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeV,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;AAACjB,EAAA,CAvDQD,OAAO;EAAA,QAECJ,SAAS;AAAA;AAAA4B,EAAA,GAFjBxB,OAAO;AAyDhB,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}